local Translations = {
     -- 主导航栏
     ["Welcome"] = "欢迎",
     ["Farming"] = "刷怪",
     ["Teleport"] = "传送",
     ["Local Player"] = "本地玩家",
     ["Dungeons"] = "地下城",
     ["Settings"] = "设置",
     ["About"] = "关于",
     -- Farming（刷怪）模块
     ["Options"] = "选项",
     ["Farming Distance"] = "刷怪距离",
     ["Farming Type"] = "刷怪类型",
     ["Method 2"] = "方法2",
     ["Mobs"] = "普通怪物",
     ["Select Mob"] = "选择怪物",
     ["Mob Farm"] = "自动刷怪",
     ["This Will Farm Mobs Automatically"] = "这将自动刷杀怪物",
     ["Boss"] = "首领",
     ["Select Boss"] = "选择首领",
     ["Boss Farm"] = "自动刷首领",
     ["This Will Farm Bosses Automatically"] = "这将自动刷杀首领",
     ["Event Boss"] = "事件首领",
     ["Select Event Boss"] = "选择事件首领",
     ["Event Boss Farm"] = "自动刷事件首领",
     ["This Will Farm Event Bosses Automatically"] = "这将自动刷杀事件首领",
     -- 杂项功能
     ["Misc"] = "杂项",
     ["Select Weapon"] = "选择武器",
     ["If not working just equip combat or any katana from inventory"] = "如果无效，请从背包装备战斗或任意武士刀",
     ["Sword/Combat"] = "剑/战斗",
     ["Auto Equip Weapon"] = "自动装备武器",
     ["Turn This Off If You Don't Want To Auto Equip Weapon"] = "如不想自动装备武器请关闭此功能",
     ["Instant Kill"] = "秒杀",
     ["Mobs will instantly die after taking 10% damage."] = "怪物受到10%伤害后立即死亡。",
     ["Auto Breath"] = "自动呼吸",
     ["Automatically breathes"] = "自动进行呼吸",
     ["Auto Buff"] = "自动增益",
     ["Automatically buffs"] = "自动施放增益效果",
     ["Auto Skills"] = "自动技能",
     ["Automatically uses skills"] = "自动使用技能",
     -- Dungeons（地下城）模块
     ["Teleport to Dungeon"] = "传送到地下城",
     ["Teleports you to the dungeon entrance"] = "将你传送到地下城入口",
     ["Auto Dungeon Farm"] = "自动刷地下城",
     ["Only works inside the dungeon"] = "仅在地下城内生效",
     -- Settings（设置）模块
     ["Reset Timer"] = "重置计时器",
     ["Time in seconds to reset the character"] = "重置角色的时间（秒）",
     ["Auto Reset"] = "自动重置",
     ["Automatically resets the character in selected time"] = "在选定时间自动重置角色",
     -- About（关于）模块
     ["Info"] = "信息",
     ["This script is made by L4BIB. Join the Discord server for support and updates."] = "本脚本由L4BIB制作。加入Discord服务器获取支持与更新。",
     ["Version"] = "版本",
     ["Last Updated"] = "最后更新",
     ["Credits"] = "汉化byTh",
     ["Script Developer"] = "脚本开发者",
     -- 特定首领/怪物名称 (选择性翻译，通常保留原名更有辨识度)
     ["Kokushibo"] = "黑死牟",
     ["Hair Dream Manipulation User"] = "发梦操纵者",
     ["Weak Demon"] = "弱小鬼",
     ["Lower Moon Demon 6"] = "下弦之陆",
     ["Lower Moon Demon 5"] = "下弦之伍",
     ["Lower Moon Demon 4"] = "下弦之肆",
     ["Demon"] = "鬼",
     ["Speed Art User"] = "速之艺术使用者",
     ["Dream Manipulation User"] = "梦境操纵者",
     ["Mutated Demon"] = "变异鬼",
     ["Winter Demon"] = "冬鬼",
     ["Strong Demon"] = "强大鬼",
     ["Half Speed Art User"] = "半速艺术使用者",
     ["Missum"] = "蜜璃",
     ["Kanao"] = "香奈乎",
     ["Zentisu"] = "善逸",
     ["Cputaro"] = "碳太郎",
     ["Tanjiro (Water)"] = "炭治郎 (水)",
     ["Tanjiro (Sun)"] = "炭治郎 (日)",
     ["Obama"] = "奥巴马",
     ["Susamaru"] = "球鬼",
     ["Douma"] = "童磨",
     ["Yorilchi (Half Form)"] = "缘一 (半形态)",
     ["Tengen"] = "天元",
     -- 补充界面中出现的文本
     ["Main Village"] = "主村庄",
     ["Final Selection"] = "最终选拔",
     ["Little Village"] = "小村庄",
     ["Demon Slayer Corp"] = "鬼杀队",
     ["Danger Zone"] = "危险区域",
     ["Winter Village"] = "冬之村",
     ["Yoriichi (Half Form)"] = "缘一 (半形态)",
     ["Gyutaro"] = "妓夫太郎",
     ["Obanai"] = "伊黑小芭内",
     ["Kanroji Mitsuri"] = "甘露寺蜜璃",
     ["Kochou Shinobu"] = "胡蝶忍",
     ["Tomiyoka Giyuu"] = "冨冈义勇",
     ["Tokito Muichiro"] = "时透无一郎",
     ["Akaza"] = "猗窝座",
     ["Hantengu"] = "半天狗",
     ["Daki"] = "堕姬",
     ["Awakened Kaigaku"] = "觉醒的狯岳",
     ["Sanemi"] = "不死川实弥",
     ["Rui"] = "累",
     ["Kaigaku"] = "狯岳",
     ["Yahaba"] = "矢琶羽",
     ["Nezuko"] = "祢豆子",
     ["Rengoku"] = "炼狱杏寿郎",
     ["Mitsuri"] = "蜜璃",
     ["Zenitsu"] = "善逸",
     ["Gyutaro"] = "妓夫太郎",
     ["Obanai"] = "伊黑小芭内",
     ["Susamaru"] = "手球鬼",
     ["Douma"] = "童磨",
     ["Tengen"] = "宇髄天元",
     ["Auto Dungeon Farm"] = "自动地下城刷怪",
     ["Reset Timmer"] = "重置计时器", -- 注意原界面是Timmer，这里保持一致
     ["L4BIB HUB"] = "L4BIB  hub",
     ["UPD 4.75"] = "版本4.75",
     ["Weak Legacy 2"] = "Weak Legacy 2"
 }
-- 关闭调试日志（减少打印消耗）
local debugMode = false
local function debugLog(message)
    if debugMode then
        print("[翻译调试] " .. message)
    end
end

-- 预缓存翻译表（避免重复处理字符串）
local cachedTranslations = {}
for en, cn in pairs(Translations) do
    cachedTranslations[en:lower():gsub("%s+", "")] = cn
    cachedTranslations[en] = cn
end

local function translateText(text)
    if not text or type(text) ~= "string" then return text end
    local textLower = text:lower():gsub("%s+", "")
    
    -- 优先精确匹配
    if cachedTranslations[text] then
        return cachedTranslations[text]
    -- 次选模糊匹配
    elseif cachedTranslations[textLower] then
        return cachedTranslations[textLower]
    end
    return text
end

local function setupTranslationEngine()
    local function translateGuiElement(gui)
        if not (gui:IsA("TextLabel") or gui:IsA("TextButton") or gui:IsA("TextBox")) then return end
        local text = gui.Text
        if not text or text == "" then return end
        
        -- 标记已翻译，避免重复处理
        if gui:GetAttribute("Translated") then return end
        local translated = translateText(text)
        if translated ~= text then
            gui.Text = translated
            gui:SetAttribute("Translated", true)
            debugLog("已翻译: " .. gui:GetFullName())
        end
    end

    local function scanGui(parent)
        debugLog("扫描: " .. parent:GetFullName())
        -- 改用GetChildren遍历（减少深层嵌套的性能消耗）
        for _, gui in ipairs(parent:GetChildren()) do
            pcall(translateGuiElement, gui)
            -- 仅递归有子节点的容器
            if #gui:GetChildren() > 0 then
                pcall(scanGui, gui)
            end
        end
    end

    local function setupDescendantListener(parent)
        parent.DescendantAdded:Connect(function(descendant)
            task.wait(0.3) -- 延长等待时间，避免重复触发
            pcall(translateGuiElement, descendant)
        end)
    end

    -- 元表劫持逻辑（保留高效模式）
    local success, err = pcall(function()
        local mt = getrawmetatable(game)
        setreadonly(mt, false)
        local oldIndex = mt.__newindex
        mt.__newindex = newcclosure(function(t, k, v)
            if (t:IsA("TextLabel") or t:IsA("TextButton") or t:IsA("TextBox")) and k == "Text" then
                v = translateText(tostring(v))
            end
            return oldIndex(t, k, v)
        end)
        setreadonly(mt, true)
        debugLog("元表劫持成功（高效模式）")
    end)

    if not success then
        debugLog("元表劫持失败: " .. tostring(err))
        local guisToScan = {game:GetService("CoreGui"), game:GetService("Players").LocalPlayer.PlayerGui}

        -- 初始扫描+监听
        for _, gui in ipairs(guisToScan) do
            if gui then
                pcall(setupDescendantListener, gui)
                pcall(scanGui, gui)
            end
        end

        -- 延长定期扫描间隔（从3秒→10秒，减少资源占用）
        coroutine.wrap(function()
            while true do
                for _, gui in ipairs(guisToScan) do
                    if gui then pcall(scanGui, gui) end
                end
                task.wait(10)
            end
        end)()
    end
end

-- 等待游戏加载（保留5秒，确保UI初始化）
task.wait(5)
setupTranslationEngine()

-- 外部脚本加载（增加超时控制，避免阻塞）
local success, err = pcall(function()
    local httpService = game:GetService("HttpService")
    local request = httpService:RequestAsync({
        Url = "https://raw.githubusercontent.com/L4BIBKAZI/L4BIB-HUB/refs/heads/main/Weak%20Legacy%202",
        Method = "GET",
        Timeout = 5
    })
    if request.Success then
        loadstring(request.Body)()
    else
        warn("外部脚本加载失败，状态码:", request.StatusCode)
    end
end)
if not success then
    warn("外部脚本加载失败，原因:", err)
end
